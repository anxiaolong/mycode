1.string="dffd78&&fdf"
regex="\\w+"
匹配结果：1.dffd78 2.fdf
分析：\w+ 
\w：表示任意一个字母数字或下划线，即a-z A-Z 0-9 _ 
+：表示匹配的结果出现一次或多次，相当于 {1,}

2.string="aa232**ssd445*sds223"
regex="([a-z]+)([0-9]+)"
匹配结果：aa232 ssd445 sds223
分析：这是一个字母和数组的组合结构
()：便是捕获组，这里是两个捕获组共同组成的结构

3.string = "'mid':'008100001dfecc3e000000a8',"
regex="'mid':'(.*?)',"
匹配结果：'mid':'008100001dfecc3e000000a8',
分析：Jmeter中会只取正则语法内的内容
.：可以匹配任意字符，换行除外
*：表示出现任意次数，相当于{0,}
?：匹配0次或1次，相当于{0，1}

4.string = "010-8999889 0816-8987665"
regex = [\d]{3,4}-[\d]{7}
分析：匹配电话号码
\d：代表匹配的数字
{}:大括号里面写数字出现的次数区间

5.string = "13554325678
13767890987
13845676543
13967898765
13490987656"
regex = 13[4,5,7,8,9][\d]{8}
分析：匹配移动电话号码
[4,5,7,8,9]：表示该位置可以匹配的数字

6.string = "testanxiaolng900@testfdf90.com.cn
admin@test.com
ttttt@fdf.cn
fdfdfdffdfdf@fdfdffd.com.cio.cm"
匹配结果：
regex = (\w+@\w+)(.\w+){1,2}
分析：匹配邮箱

7.\s\S
分析：/s是匹配空格、换行符、制表符，/S取的是它的反。
\w\W \d\D 都有这种用法


