1.jdk和jre的区别？
@：
jdk：是java development kit的简称，java开发工具包。
jre：是java runtime environment的简称，java运行环境。
关系：jdk包含jre，还包含java编译器，java调试工具等。

2.==和equals的区别是什么？
@：
== ：基本类型比较的是值是否相等，应用类型比较的是引用是否相等。
equals：默认是对象的引用比较，如何需要进一步比较需要重写对象的equals和hashCode方法。

3.两个对象的hashCode()相同，equals()一定为true吗？
@：
不一定。"通话" "重地"，这个两个字符串hashCode相同。
hashCode相同不能推算出散列表中键值对也相同。

4.final在java中的作用？
@：
final修饰类：该类不能被继承，是最终类。
final修饰方法：不能被重写。
final修饰变量：必须初始化，且不能被修改。

5.Math.round(-1.5)等于多少？
@：
-1

6.String属于基础类型吗？
@：
不属于，属于引用类型。
基本类型：byte boolean int short lang double float char。

7.java中字符串操作的类有哪些？
@：
String StringBuilder StringBuffer
String：不能操作字符串，创建之后不能改变
StringBuilder：可操作字符串，线程不安全，操作效率高
StringBuffer:可操作字符串，线程安全，操作效率低
单线程环境使用StringBuilder，多线程环境使用StringBuffer

8.String s ="i"和String s = new String("s")有什么区别？
@：
s="i"会被jvm分配到常量池中，new String("i")会被放到堆内存中。

9.如何将字符串反转？
@:
StringBuilder和StringBuffer类下面的reverse()方法。


10.String常用方法有哪些？
@：
substring()截取字符串
split()分割字符串，并返回字符串数组
toLowerCase()转化为小写
toUpperCase()转化为大写
indexOf()返回字符的下标
charAt()返回下标的字符
replace()替换字符或字符串，返回一个新字符串
trim()去掉前后空格
getBytes()转为字节数组
length()获取长度
equals()字符串比较

11.抽象类一定要有抽象方法吗？
@：
抽象类可以没有抽象方法，抽象类不能直接new对象。

12.普通类和抽象类有什么区别？
@：
普通类不能包含抽象方法，抽象类可以包含抽象方法。
普通类可以直接创建实例，抽象类不能直接创建实例。

13.抽象类可以使用final修饰吗？
@：
不能，抽象类主要拿来被继承使用，
final修饰的类不能被继承，相互矛盾。

14.接口和抽象类有什么区别？
@：
实现方式：接口使用implements，抽象类使用extends。
实现数量：一次可以实现多个接口，只能继承一个抽象类。
构造方法：接口不能有构造方法实现，抽象类可以有具体的方法实现。
main方法：接口不能有main方法，抽象类可以有main方法。
访问修饰符：接口默认为pubilic，抽象类方法可以是任意的修饰符。

15.java中IO流分为几种？
@：
按功能：输入流input，输出流output
按类型：字节流和字符流
字节流按8位进行字节的输入输出，字符按16位进行字符的输入输出。

16.BIO、NIO、AIO有什么区别？
@：
BIO：Block IO，同步阻塞式IO，普通使用的IO，模式简单使用方便，并发处理能力低。
NIO：New IO，同步非阻塞式IO，BIO的升级，客户端和服务端通过channel通信，实现了多路复用。
AIO:Asynchronous IO,异步非阻塞IO，NIO的升级，异步IO的操作通过事件和回调机制。

17.Files的常用方法有哪些？
@：
Files.exists() 是否存在Path
Files.createFile() 创建文件
Files.createDirectory() 创建文件夹
Files.delete() 删除文件
Files.copy() 复制文件
Files.move() 移动文件
Files.size() 文件及子文件大小 单位byte
Files.readAllBytes() 文件转位字节数组
Files.write() 字节数组输出为文件

